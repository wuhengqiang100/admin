<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoshu.admin.mapper.RoleMapper">

  <!-- 通用查询映射结果 -->
  <resultMap id="BaseResultMap" type="com.xiaoshu.admin.entity.Role">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="create_date" property="createDate" />
    <result column="create_by" property="createBy" />
    <result column="update_date" property="updateDate" />
    <result column="update_by" property="updateBy" />
    <result column="remarks" property="remarks" />
    <result column="del_flag" property="delFlag" />
    <result column="identity" property="identity"/>
    <result column="request_place" property="requestPlace"/>
    <result column="age" property="age"/>
    <result column="tel" property="tel"/>
    <result column="email" property="email"/>
  </resultMap>

  <!-- 通用查询结果列 -->
  <sql id="Base_Column_List">
      id, name, create_date, create_by, update_date, update_by, remarks, del_flag,identity,request_place,age,tel,email
   </sql>

  <select id="loginPageRequest" parameterType="java.lang.Integer" resultMap="ResultMapLoginPro">
      SELECT id,name FROM sys_role limit #{page},#{size};
  </select>

  <select id="loginPageRequestWithOutPage" resultMap="ResultMapLoginPro">
    SELECT id,name FROM sys_role;
  </select>


  <resultMap id="ResultMapLoginPro" type="com.xiaoshu.admin.entity.Role">
    <id column="id" property="id" />
    <result column="name" property="name"/>
  </resultMap>



  <insert id="saveRoleMenus">
    insert into sys_role_menu(role_id,menu_id)
    values
    <foreach collection="menus" item="m" index="index" separator="," >
      (#{roleId},#{m.id})
    </foreach>
  </insert>

  <resultMap type="com.xiaoshu.admin.entity.Role" id="RoleMap">

    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="create_date" property="createDate" />
    <result column="create_by" property="createBy" />
    <result column="update_date" property="updateDate" />
    <result column="update_by" property="updateBy" />
    <result column="remarks" property="remarks" />
    <result column="del_flag" property="delFlag" />
    <result column="identity" property="identity"/>
    <result column="request_place" property="requestPlace"/>
    <result column="age" property="age"/>
    <result column="tel" property="tel"/>
    <result column="email" property="email"/>
    <collection property="menuSet"  ofType="com.xiaoshu.admin.entity.Menu">
      <result property="id" column="menuSet.id"/>
      <result property="name" column="menuSet.name"/>
      <result property="permission" column="menuSet.permission"/>
      <result property="icon" column="menuSet.icon"/>
      <result property="href" column="menu.href"/>
      <result property="bgColor" column="menu.bgColor"/>
    </collection>
  </resultMap>

  <resultMap id="RoleMap01" type="com.xiaoshu.admin.entity.Role">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="create_date" property="createDate" />
    <result column="create_by" property="createBy" />
    <result column="update_date" property="updateDate" />
    <result column="update_by" property="updateBy" />
    <result column="remarks" property="remarks" />
    <result column="del_flag" property="delFlag" />
    <result column="identity" property="identity"/>
    <result column="request_place" property="requestPlace"/>
    <result column="age" property="age"/>
    <result column="tel" property="tel"/>
    <result column="email" property="email"/>
    <collection property="userSet"  ofType="com.xiaoshu.admin.entity.User">
      <result property="id" column="userSet.id"/>
      <result property="loginName" column="userSet.loginName"/>
      <result property="nickName" column="userSet.nickName"/>
    </collection>
  </resultMap>

  <resultMap id="ResultMapPro" type="com.xiaoshu.admin.entity.Role">
    <id column="id" property="id" />
    <result column="identity" property="identity"/>
    <result column="request_place" property="requestPlace"/>
    <result column="age" property="age"/>
    <result column="tel" property="tel"/>
    <result column="email" property="email"/>
  </resultMap>

  <select id="findRoleProByRoleId" resultMap="ResultMapPro" parameterType="java.lang.String">
    SELECT id,identity,request_place,age,tel,email  FROM sys_role WHERE id=#{roleId};
  </select>
  <select id="selectUserInRole" resultMap="RoleMap01"  parameterType="java.lang.String">
    SELECT
    r.id,
    r.name,
    r.remarks,
    r.del_flag,
    r.identity,
    r.request_place,
    r.age,
    r.tel,
    r.email,
    su.id  	        AS 	"userSet.id",
    su.login_name          AS  "userSet.loginName",
    su.nick_name    AS  "userSet.nickName"
    from
    sys_role r
    left join sys_user_role  sur 	on 	    sur.role_id = r.id
    left join sys_user  su    		on 	    sur.user_id = su.id
    where
    r.del_flag = FALSE
    <if test="roleId != null and roleId != ''">
      and r.id = #{roleId}
    </if>
    and su.del_flag=FALSE
  </select>

  <select id="selectRoleById" resultMap="RoleMap"  parameterType="java.lang.String">
    SELECT
    r.id,
    r.name,
    r.remarks,
    r.del_flag,
    r.identity,
    r.request_place,
    r.age,
    r.tel,
    r.email,
    m.id  	        AS 	"menuSet.id",
    m.name          AS  "menuSet.name",
    m.permission    AS  "menuSet.permission",
    m.icon          AS  "menuSet.icon",
    m.href      	AS 	"menu.href",
    m.bg_color      AS  "menu.bgColor"
    from
    sys_role r
    left join sys_role_menu  srm 	on 	    srm.role_id = r.id
    left join sys_menu  m    		on 	    m.id = srm.menu_id
    where
    r.del_flag = FALSE
    <if test="roleId != null and roleId != ''">
      and r.id = #{roleId}
    </if>
  </select>

  <delete id="dropRoleMenus" parameterType="java.lang.String">
    delete from sys_role_menu where role_id = #{roleId}
  </delete>

  <delete id="dropRoleUsers" parameterType="java.lang.String">
    delete from sys_user_role where role_id = #{roleId}
  </delete>

</mapper>